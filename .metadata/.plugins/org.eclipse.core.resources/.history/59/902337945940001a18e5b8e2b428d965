package com.algaworks.algamoney.api.resource;

import java.util.Arrays;
import java.util.Collection;
import java.util.List;

import javax.servlet.http.HttpServletResponse;
import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationEventPublisher;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.algaworks.algamoney.api.event.CreatedResourceEvent;
import com.algaworks.algamoney.api.model.Pessoa;
import com.algaworks.algamoney.api.repository.PessoaRepository;
import com.algaworks.algamoney.api.service.PessoaService;

@RestController
@RequestMapping("/pessoas")
public class PessoaController {

	@Autowired
	PessoaService pessoaService;
	
	@Autowired
	PessoaRepository pessoaRepository;
	
	@Autowired
	ApplicationEventPublisher eventPublisher;
	
	@GetMapping
	public List<Pessoa> find() {
		return pessoaRepository.findAll();
	}
	
	@GetMapping("/{codigo}")
	public ResponseEntity<Pessoa> findById(@PathVariable("codigo") Long codigo) {
		Pessoa pessoa = pessoaRepository.findOne(codigo);
		return pessoa != null ? ResponseEntity.ok(pessoa) : ResponseEntity.notFound().build();
	}
	
	@PostMapping
	// o @Valid vai validar os atributos recebidos para a entidade pessoa
	public ResponseEntity<?> create(@Valid @RequestBody Pessoa pessoa, HttpServletResponse response) {
		Pessoa pessoaSaved = pessoaRepository.save(pessoa);
		eventPublisher.publishEvent(new CreatedResourceEvent(this, response, pessoaSaved.getCodigo()));
		return ResponseEntity.status(HttpStatus.CREATED).build();
	}
	
	@PutMapping("/{codigo}")
	public ResponseEntity<Pessoa> update(@PathVariable("codigo") Long codigo, @Valid @RequestBody Pessoa pessoa) {
		Pessoa savedPessoa = pessoaService.update(codigo, pessoa);
		return ResponseEntity.ok(savedPessoa);
	}
	
	@DeleteMapping("/{codigo}")
	public ResponseEntity<?> delete(@PathVariable("codigo") Long codigo) {
		pessoaRepository.delete(codigo);
		return ResponseEntity.ok().build();
	}
	
}
